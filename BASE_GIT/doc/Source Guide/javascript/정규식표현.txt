Date Format (m/d/y) ^([\d]|1[0,1,2])/([0-9]|[0,1,2][0-9]|3[0,1])/\d{4}$ 12/21/2005 
 Decimal Number ^\d*[0-9](\.\d*[0-9])?$ 234.342 
 Document Filenames ^[a-zA-Z0-9-_\.]+\.(pdf|txt|doc|csv)$ world-domination.pdf 
 E-mail Address ^([0-9a-zA-Z]+([_.-]?[0-9a-zA-Z]+)*@[0-9a-zA-Z]+[0-9,a-z,A-Z,.,-]*(.){1}[a-zA-Z]{2,4})+$ 
 HTML Color Codes ^#?([a-f]|[A-F]|[0-9]){3}(([a-f]|[A-F]|[0-9]){3})?$ #00ccff 
 Image Filenames ^[a-zA-Z0-9-_\.]+\.(jpg|gif|png)$ new-pic_company.jpg 
 IP Address ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})$ 192.168.0.1 
 Multimedia Filenames ^[a-zA-Z0-9-_\.]+\.(swf|mov|wma|mpg|mp3|wav)$ company-presentation.swf 
 MySQL Date Format ^\d{4}-(0[0-9]|1[0,1,2])-([0,1,2][0-9]|3[0,1])$ 2005-09-02 
 Phone Number ^[2-9]\d{2}-\d{3}-\d{4}$ 250-555-4542 
 Postal Code (CAD) ^([A-Z][0-9]){3}$ V2B2S3 
 Time Format (HH:MM) ^([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}$ 12:29 
 URL ^(http[s]?://|ftp://)?(www\.)?[a-zA-Z0-9-\.]+\.(com|org|net|mil|edu|ca|co.uk|com.au|gov)$ 
 Versatile Phone Number ^(([0-9]{1})*[- .(]*([0-9a-zA-Z]{3})*[- .)]*[0-9a-zA-Z]{3}[- .]*[0-9a-zA-Z]{4})+$ 1.245.532.3422 


 Credit Card Number [0-9]{13,16} 
 Diners Club Card ^([30|36|38]{2})([0-9]{12})$  
 ICQ UIN ([1-9])+(?:-?\d){4,}  
 Alpha-Numeric ^[a-zA-Z0-9]+$   
 Domain like "abc.de" ^([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}$  
 IPv4 Address ((^|\.)((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))){4}$  
 IPv6 Address ((^|:)([0-9a-fA-F]{0,4})){1,8}$  
 Username with 2-20 chars (format: string+string|number) ^[a-zA-Z][a-zA-Z0-9-_\.]{1,20}$   
 Password (UpperCase, LowerCase and Number) ^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s).*$   
 Password (UpperCase, LowerCase, Number/SpecialChar and min 8 Chars) (?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$ 
 American Postal Code (format is nnnnn or nnnnn-nnnn) (\d{5}([\-]\d{4})?) 
 Canadian Postal Code (Format: A0A 0A0) ^([A-Za-z][0-9][A-Za-z] [0-9][A-Za-z][0-9])$  
 Australia Postal Code (Format: nnnn) ^[0-9]{4}$   
 Austrian Postal Code (Format: nnnn) ^[0-9]{4}$   
 Hungarian Postal Code (Format: nnnn) ^[0-9]{4}$   
 German Postal Code (Format: nnnnn) ^[0-9]{5}$   
 Swedish Postal Code (Format: nnnnn) ^[0-9]{5}$   
 Japanese Postal Code (Format: nnn-nnnn) ^\d{3}-\d{4}$   
 Spanish Postal Code (Format: 01xxx to 50xxx) ((0[1-9]|5[0-2])|[1-4][0-9])[0-9]{3}   
 Dutch Postal Code (Format: 1234 aa) ^[1-9][0-9]{3}\s?[a-zA-Z]{2}$  
 Date (Format: YYYY-MM-DD) [0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])   
 Full Date Validation (YYYY-MM-DD) (?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))  
 Date (Format: MM/DD/YYYY) (0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\d\d   
 Full date validation (MM/DD/YYYY) (?:(?:0[1-9]|1[0-2])[\/\\-. ]?(?:0[1-9]|[12][0-9])|(?:(?:0[13-9]|1[0-2])[\/\\-. ]?30)|(?:(?:0[13578]|1[02])[\/\\-. ]?31))[\/\\-. ]?(?:19|20)[0-9]{2}
 Latitude or Longitude -?\d{1,3}\.\d+   
 Price (Format: 1.00) \d+(\.\d{2})?  
 Price (Format: 1,00) \d+(,\d{2})?   
 Phone Number (Format: +99(99)9999-9999) [\+]\d{2}[\(]\d{2}[\)]\d{4}[\-]\d{4}   
 Integers with or without decimals (Format: 9 or 9.9) \-?\d+(\.\d{0,})?   
 UUID ^[0-9A-Fa-f]{8}\-[0-9A-Fa-f]{4}\-[0-9A-Fa-f]{4}\-[0-9A-Fa-f]{4}\-[0-9A-Fa-f]{12}$ 
 
 
 우선 사용예는 다음과 같다.

예)
 < script language="java script">
   function chk(pstr) {
    var chkRep = /....-..-../;
    alert!!(chkRep.test(pstr));
   }
 < / script >

정규식은 다음과 같다.

(1) ^ (caret) : 라인의 처음이나 문자열의 처음을 표시
 예 : ^aaa (문자열의 처음에 aaa를 포함하면 참, 그렇지 않으면 거짓)

(2) $ (dollar) : 라인의 끝이나 문자열의 끝을 표시
 예 : aaa$ (문자열의 끝에 aaa를 포함하면 참, 그렇지 않으면 거짓)

(3) . (period) : 임의의 한 문자를 표시
 예 : ^a.c (문자열의 처음에 abc, adc, aZc 등은 참, aa 는 거짓)
a..b$ (문자열의 끝에 aaab, abbb, azzb 등을 포함하면 참)

(4) [] (bracket) : 문자의 집합이나 범위를 나타냄, 두 문자 사이의 "-"는 범위를 나타냄
[]내에서 "^"이 선행되면 not을 나타냄
 이외에도 "문자클래스"를 포함하는 [:문자클래스:]의 형태가 있다.
여기에서 "문자클래스"에는 alpha, blank, cntrl, digit, graph, lower, print, space, uppper, xdigit가 있다.
이에 대한 자세한 내용은 C언어의 <ctype.h>를 참조하면 된다.
예를 들어 [:digit:]는 [0-9]와 [:alpha:]는 [A-Za-z]와 동일하다.
 이외에 [:<:]와 [:>:]는 어떤 단어(숫자, 알파벳, '_'로 구성됨)의 시작과 끝을 나타낸다.
예 : [abc] (a, b, c 중 어떤 문자, "[a-c]."과 동일)
 [Yy] (Y 또는 y)
 [A-Za-z0-9] (모든 알파벳과 숫자)
 [-A-Z]. ("-"(hyphen)과 모든 대문자)
 [^a-z] (소문자 이외의 문자)
 [^0-9] (숫자 이외의 문자)
 [[:digit:]] ([0-9]와 동일)

(5) {} (brace) : {} 내의 숫자는 직전의 선행문자가 나타나는 횟수 또는 범위를 나타냄
 예 : a{3} ('a'의 3번 반복인 aaa만 해당됨)
a{3,} ('a'가 3번 이상 반복인 aaa, aaaa, aaaa, ... 등을 나타냄)
a{3,5} (aaa, aaaa, aaaaa 만 해당됨)
ab{2,3} (abb와 abbb 만 해당됨)
 [0-9]{2} (두 자리 숫자)
doc[7-9]{2} (doc77, doc87, doc97 등이 해당)
 [^Zz]{5} (Z와 z를 포함하지 않는 5개의 문자열, abcde, ttttt 등이 해당)
 .{3,4}er ('er'앞에 세 개 또는 네 개의 문자를 포함하는 문자열이므로 Peter, mother 등이 해당)

(6) * (asterisk) : "*" 직전의 선행문자가 0번 또는 여러번 나타나는 문자열
 예 : ab*c ('b'를 0번 또는 여러번 포함하므로 ac, ackdddd, abc, abbc, abbbbbbbc 등)
 * (선행문자가 없는 경우이므로 임의의 문자열 및 공백 문자열도 해당됨)
 .* (선행문자가 "."이므로 하나 이상의 문자를 포함하는 문자열, 공백 문자열은 안됨)
ab* ('b'를 0번 또는 여러번 포함하므로 a, accc, abb, abbbbbbb 등)
a* ('a'를 0번 또는 여러번 포함하므로 k, kdd, sdfrrt, a, aaaa, abb, 공백문자열 등) doc[7-9]* (doc7, doc777, doc778989, doc 등이 해당)
 [A-Z].* (대문자로만 이루어진 문자열)
like.* (직전의 선행문자가 '.'이므로 like에 0 또는 하나 이상의 문자가 추가된 문자열이됨, like, likely, liker, likelihood 등)

(7) + (asterisk) : "+" 직전의 선행문자가 1번 이상 나타나는 문자열
 예 : ab+c ('b'를 1번 또는 여러번 포함하므로 abc, abckdddd, abbc, abbbbbbbc 등, ac는 안됨)
ab+ ('b'를 1번 또는 여러번 포함하므로 ab, abccc, abb, abbbbbbb 등)
like.+ (직전의 선행문자가 '.'이므로 like에 하나 이상의 문자가 추가된 문자열이 됨, likely, liker, likelihood 등, 그러나 like는 해당안됨)
 [A-Z]+ (대문자로만 이루어진 문자열)

(8) ? (asterisk) : "?" 직전의 선행문자가 0번 또는 1번 나타나는 문자열
 예 : ab?c ('b'를 0번 또는 1번 포함하므로 abc, abcd 만 해당됨)

(9) () (parenthesis) : ()는 정규식내에서 패턴을 그룹화 할 때 사용

(10) | (bar) : or를 나타냄
 예 : a|b|c (a, b, c 중 하나, 즉 [a-c]와 동일함)
yes|Yes (yes나 Yes 중 하나, [yY]es와 동일함)
korea|japan|chinese (korea, japan, chinese 중 하나)

(11) \ (backslash) : 위에서 사용된 특수 문자들을 정규식내에서 문자를 취급하고 싶을 때 '\'를 선행시켜서 사용하면됨
 예 : filename\.ext ("filename.ext"를 나타냄)
 [\?\[\\\]] ('?', '[', '\', ']' 중 하나)

정규식에서는 위에서 언급한 특수 문자를 제외한 나머지 문자들은 일반 문자로 취급함 

 

 

제가 만든 국내전화와 미국,일본,중국의 국제전화가 가능한 전화번호 정규식입니다 국가별 코드가 틀린부분도 있기 때문에 필요한 부분은 수정을 하셔야 할 겁니다. 국제번호식별코드-국가코드-지역번호-상대번호의 형식입니다. 도움이 되셨으면 좋겠네요 ((00\d{1,3}-?\d{1,3}-\d{1,4})|(0\d{1,2}))-\d{3,4}-\d{4}
 